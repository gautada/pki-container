#!/bin/sh

# ca-server: Creates a server side key/certificate pair.

if [ -z $1 ] ; then
 echo "[ERROR] Must include a host parameter"
 exit 1
fi

vault-umount
vault-mount

HOST=$1
DOMAIN="$(/opt/pki/scripts/fqdn-parser $HOST)"
if [ ! $? -eq 0 ] ; then
 echo "$DOMAIN"
 exit 2
fi

CA="ca.$DOMAIN"
MOUNT_POINT="/mnt/vault"
PKI_ROOT="$MOUNT_POINT/ca"
CA_ROOT="$PKI_ROOT/$CA"

# Expiration is set to 10 years
EXPIRE=3650

/bin/mountpoint -q $MOUNT_POINT
if [ $? -eq 0 ] ; then
 if [ -d $CA_ROOT ] ; then
  /usr/bin/easypki --root $PKI_ROOT create --ca-name $CA --expire $EXPIRE --dns $DOMAIN $DOMAIN
 else
  echo "[ERROR] Invalid CA($CA_ROOT)"
  exit 2
 fi
else
 echo "[ERROR] Vault is not mounted"
 exit 3
fi

vault-umount

# This should form the basis of the export function
# /bin/mkdir -p $CA_ROOT/public
# if [ ! -f $CA_ROOT/public/$HOST.pem ] ; then
#  cat $PKI_ROOT/$CA/certs/$HOST.crt $PKI_ROOT/$CA/certs/$CA.crt > $PKI_ROOT/$CA/public/$HOST.pem
# fi
# VAULT_PATH=/mnt/$VAULT/ca.gautier.local
# cat $VAULT_PATH/certs/$HOST.crt $VAULT_PATH/certs/ca.gautier.local.crt > $VAULT_PATH/public/$HOST.pem
# chmod +r-w $VAULT_PATH/public/$HOST.pem

# /usr/bin/vault-refresh
