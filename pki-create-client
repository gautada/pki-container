#!/bin/sh

# pki-create-client: Creates a new client signed certficate and packages the key into a distribution file.

if [ -z $1 ] ; then
 echo "[ERROR] Client host must be provided (host.domain.tld)"
 exit 1
fi

MOUNT_POINT="/mnt/vault"
OUTBOX="/mnt/volumes/container/outbox"

CA_KEY="$MOUNT_POINT/ca/ca.gautier.org/keys/ca.gautier.org.key"
CA_CRT="$MOUNT_POINT/ca/ca.gautier.org/certs/ca.gautier.org.crt"

KEYS="$MOUNT_POINT/clients/keys"
CRTS="$MOUNT_POINT/clients/certs"
CSRS="$MOUNT_POINT/clients/csrs"

/usr/bin/vault-umount
/usr/bin/vault-mount

HOST=$1

CLIENT_KEY="$KEYS/$HOST.key"
CLIENT_CRT="$CRTS/$HOST.crt"
CLIENT_CSR="$CSRS/$HOST.csr"
CLIENT_PKG="$OUTBOX/$HOST.pfx"

/bin/mountpoint -q $MOUNT_POINT
if [ $? -eq 1 ] ; then
 echo "[ERROR] Vault is not mounted"
 exit 1
fi

if [ ! -d "$OUTBOX" ] ; then
 echo"[ERROR] Outbox($OUTBOX) folder does not exist"
 exit 2
fi

if [ ! -f "$CA_KEY" ] ; then
 echo"[ERROR] CA Key($CA_KEY) file does not exist"
 exit 3
fi

if [ ! -f "$CA_CRT" ] ; then
 echo"[ERROR] CA Certificate($CA_CRT) file does not exist"
 exit 3
fi

if [ ! -d "$KEYS" ] ; then
 echo"[ERROR] Keys($KEYS) folder does not exist"
 exit 4
fi

if [ ! -d "$CRTS" ] ; then
 echo"[ERROR] Certificates($CRTS) folder does not exist"
 exit 4
fi

if [ ! -d "$CSRS" ] ; then
 echo"[ERROR] Certificate Signing Requests($CSRS) folder does not exist"
 exit 4
fi

if [ ! -d "$OUTBOX" ] ; then
 echo"[ERROR] Export Point($EXPORT_POINT) folder does not exist"
 exit 4
fi

if [ -f $CLIENT_PKG ] ; then
  echo"[ERROR] Client package($CLIENT_PKG) already exists"
 exit 5
fi

if [ -f $CLIENT_KEY ] ; then
 echo"[ERROR] Client key($CLIENT_KEY) already exists"
 exit 5
fi

if [ -f $CLIENT_CRT ] ; then
 echo"[ERROR] Client certificate($CLIENT_CRT) already exists"
 exit 5
fi

if [ -f $CLIENT_CSR ] ; then
 echo"[ERROR] Client certificate signing request($CLIENT_CSR) already exists"
 exit 5
fi

# /usr/bin/openssl genrsa -des3 -out /mnt/vault/clients/keys/saturn.gautier.org.key 4096
#
# /usr/bin/openssl req -new \
#  -subj "/C=US/ST=North Carolina/L=Charlotte/O=Client Certificate(saturn.gautier.org)/OU=pki/CN=saturn.gautier.org" \
# -key /mnt/vault/clients/keys/saturn.gautier.org.key -out /mnt/vault/clients/csrs/saturn.gautier.org.csr
#
# /usr/bin/openssl x509 -req -days 3650 -in /mnt/vault/clients/csrs/saturn.gautier.org.csr -CA /mnt/vault/ca/ca.gautier.org/certs/ca.gautier.org.crt -CAkey /mnt/vault/ca/ca.gautier.org/keys/ca.gautier.org.key -set_serial 01 -out /mnt/vault/clients/certs/saturn.gautier.org.crt
#
# /usr/bin/openssl pkcs12 -export -out /mnt/volumes/container/outbox/saturn.gautier.org.pfx -inkey /mnt/vault/clients/keys/saturn.gautier.org.key -in /mnt/vault/clients/certs/saturn.gautier.org.crt -certfile /mnt/vault/ca/ca.gautier.org/certs/ca.gautier.org.crt

 
/usr/bin/openssl genrsa -des3 -out $CLIENT_KEY 4096
/usr/bin/openssl req -new \
 -subj "/C=US/ST=North Carolina/L=Charlotte/O=Client Certificate($HOST)/OU=pki/CN=$HOST" \
 -key $CLIENT_KEY -out $CLIENT_CSR
/usr/bin/openssl x509 -req -days 3650 -in $CLIENT_CSR -CA $CA_CRT -CAkey $CA_KEY -set_serial 01 -out $CLIENT_CRT
/usr/bin/openssl pkcs12 -export -out $CLIENT_PKG -inkey $CLIENT_KEY -in $CLIENT_CRT -certfile $CA_CRT

/usr/bin/vault-umount


# /usr/bin/openssl genrsa -des3 -out /mnt/vault/clients/keys/saturn.gautier.org.pem 4096

# /usr/bin/openssl req -new -subj "/C=US/ST=North Carolina/L=Charlotte/O=Client Certificate(saturn.gautier.org)/OU=pki/CN=saturn.gautier.org" \
#  -key /mnt/vault/clients/keys/saturn.gautier.org.pem -out /mnt/vault/clients/reqs/saturn.gautier.org.req

# /usr/bin/openssl x509 -req -days 3650 -in /mnt/vault/clients/reqs/saturn.gautier.org.req \
# -CA /mnt/vault/ca/ca.gautier.org/certs/ca.gautier.org.crt -CAkey /mnt/vault/ca/ca.gautier.org/keys/ca.gautier.org.key \
# -set_serial 01 -out /mnt/vault/clients/certs/saturn.gautier.org.crt

# /usr/bin/openssl pkcs12 -export -out /mnt/volumes/container/outbox/saturn.gautier.org.pfx \
# -inkey /mnt/vault/clients/keys/saturn.gautier.org.pem \
# -in /mnt/vault/clients/certs/saturn.gautier.org.crt -certfile /mnt/vault/ca/ca.gautier.org/certs/ca.gautier.org.crt

# cat ca/ca.gautier.org/certs/ca.gautier.org.crt ca/root/certs/root.crt > /mnt/volumes/container/outbox/ca.gautier.org.crt
 
# kubectl create secret generic ca.gautier.org --from-file=/mnt/volumes/container/outbox/ca.gautier.org.crt

# /usr/bin/openssl pkcs12 -export -out /mnt/volumes/container/outbox/saturn.gautier.org.pfx -inkey /mnt/vault/clients/keys/saturn.gautier.org.key -in /mnt/vault/clients/certs/saturn.gautier.org.crt -certfile /mnt/volumes/container/outbox/ca.gautier.org.crt

# /usr/bin/openssl pkcs12 -export -out /mnt/volumes/container/outbox/saturn.gautier.org.pfx -inkey _key -in /mnt/vault/clients/certs/saturn.gautier.org.crt -certfile /mnt/volumes/container/outbox/ca.gautier.org.crt

/usr/bin/openssl pkcs12 -export -clcerts -inkey /mnt/vault/clients/keys/saturn.gautier.org.pem -in /mnt/vault/clients/certs/saturn.gautier.org.crt -certfile /mnt/vault/ca/ca.crt -out /mnt/volumes/container/outbox/saturn.gautier.org.p12 -name "saturn.gautier.org"


# /usr/bin/openssl genrsa -out /mnt/vault/clients/keys/saturn.gautier.org.pem 4096

/usr/bin/openssl pkcs12 -export -out /mnt/volumes/container/outbox/saturn.gautier.org.pfx -in /mnt/vault/clients/certs/saturn.gautier.org.crt -certfile /mnt/vault/ca/ca.gautier.org/certs/ca.gautier.org.crt
